[{"/home/ubuntu/dev/invoice-generator/client/src/index.js":"1","/home/ubuntu/dev/invoice-generator/client/src/reportWebVitals.js":"2","/home/ubuntu/dev/invoice-generator/client/src/App.jsx":"3","/home/ubuntu/dev/invoice-generator/client/src/components/InvoiceForm.js":"4"},{"size":500,"mtime":1608552886823,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1608552886823,"results":"7","hashOfConfig":"6"},{"size":954,"mtime":1608552886823,"results":"8","hashOfConfig":"6"},{"size":5653,"mtime":1608713017595,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1myo84k",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/home/ubuntu/dev/invoice-generator/client/src/index.js",[],["20","21"],"/home/ubuntu/dev/invoice-generator/client/src/reportWebVitals.js",[],"/home/ubuntu/dev/invoice-generator/client/src/App.jsx",[],"/home/ubuntu/dev/invoice-generator/client/src/components/InvoiceForm.js",["22"],"import React, {useEffect} from 'react'\nimport {ErrorMessage, Field, FieldArray, Form, Formik} from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport {Delete} from \"@material-ui/icons\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from 'axios';\n\nconst initialValues = {\n    email: 'naik-92@inbox.ru',\n    description: [\n        {\n            title: 'test',\n            price: '2500',\n        },\n    ],\n};\n\nexport const InvoiceForm = () => {\n\n    const sendDataToServer = (invoiceData) => {\n        try {\n            axios.post('/api/invoice', invoiceData, {\n                withCredentials: true,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }).then((data) => {\n                    console.log(data);\n                }\n            )\n        } catch (error) {\n            alert(error.message)\n        }\n\n\n    }\n\n    return (\n        <div>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={async (values, {resetForm}) => {\n                    await sendDataToServer(JSON.stringify(values))\n                    resetForm({})\n                }}\n            >\n                {({values}) => (\n                    <Form>\n                        <Field\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            style={{marginBottom: \"10px\"}}\n                        />\n                        <FieldArray name=\"description\">\n                            {({remove, push}) => (\n                                <div>\n                                    {values.description.length > 0 &&\n                                    values.description.map((item, index) => (\n                                        <div className=\"row\" key={index}>\n                                            <Paper style={{padding: \"15px\", margin: \"10px\"}}>\n                                                <div className=\"col\">\n                                                    <Field\n                                                        name={`description.${index}.title`}\n                                                        placeholder=\"Job title\"\n                                                        type=\"text\"\n                                                        style={{margin: \"5px 0\"}}\n                                                    />\n                                                    <ErrorMessage\n                                                        name={`description.${index}.title`}\n                                                        component=\"div\"\n                                                        className=\"field-error\"\n                                                    />\n                                                </div>\n                                                <div className=\"row\" key={index}>\n                                                    <div className=\"col\">\n                                                        <Field\n                                                            name={`description.${index}.price`}\n                                                            placeholder=\"Price\"\n                                                            type=\"text\"\n                                                            style={{margin: \"5px 0\"}}\n                                                        />\n                                                        <ErrorMessage\n                                                            name={`description.${index}.price`}\n                                                            component=\"div\"\n                                                            className=\"field-error\"\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col\">\n                                                    <Button onClick={() => remove(index)}\n                                                            type=\"button\"\n                                                            size=\"small\">\n                                                        <Delete/>\n                                                    </Button>\n                                                </div>\n                                            </Paper>\n\n\n                                        </div>\n                                    ))}\n                                    <Button onClick={() => push({title: '', price: ''})}\n                                            style={{margin: \"10px 0\"}}\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            type=\"button\">\n                                        Add description\n                                    </Button>\n                                </div>\n                            )}\n                        </FieldArray>\n                        <Button color=\"primary\"\n                                variant=\"contained\"\n                                type=\"submit\"\n                                size=\"small\"\n                                style={{marginBottom: \"5px\"}}>\n                            Submit\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":16,"nodeType":"29","messageId":"30","endLine":1,"endColumn":25},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]