[{"C:\\dev\\invoice-generator\\clinet\\src\\index.js":"1","C:\\dev\\invoice-generator\\clinet\\src\\reportWebVitals.js":"2","C:\\dev\\invoice-generator\\clinet\\src\\App.jsx":"3","C:\\dev\\invoice-generator\\clinet\\src\\components\\InvoiceForm.js":"4"},{"size":500,"mtime":1608296739125,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1608296739125,"results":"7","hashOfConfig":"6"},{"size":954,"mtime":1608382966650,"results":"8","hashOfConfig":"6"},{"size":5827,"mtime":1608490446342,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"qv09ov",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\dev\\invoice-generator\\clinet\\src\\index.js",[],["19","20"],"C:\\dev\\invoice-generator\\clinet\\src\\reportWebVitals.js",[],"C:\\dev\\invoice-generator\\clinet\\src\\App.jsx",[],"C:\\dev\\invoice-generator\\clinet\\src\\components\\InvoiceForm.js",["21","22"],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":23,"column":28,"nodeType":"29","endLine":36,"endColumn":10},{"ruleId":"30","severity":1,"message":"31","line":25,"column":23,"nodeType":"32","messageId":"33","endLine":25,"endColumn":31},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"react-hooks/exhaustive-deps","Assignments to the 'sendDataToServer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ArrowFunctionExpression","no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]